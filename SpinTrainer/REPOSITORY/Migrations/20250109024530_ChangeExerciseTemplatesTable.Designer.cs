// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using REPOSITORY.DBContext;

#nullable disable

namespace REPOSITORY.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250109024530_ChangeExerciseTemplatesTable")]
    partial class ChangeExerciseTemplatesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ENTITYS.CompanyDataEntity", b =>
                {
                    b.Property<string>("RIF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descrip")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Direc")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("RIF");

                    b.ToTable("CompanyData");
                });

            modelBuilder.Entity("ENTITYS.ExerciseEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descrip")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("HandsPositions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RPMMax")
                        .HasColumnType("int");

                    b.Property<int>("RPMMin")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descrip = "Plano Sentado",
                            HandsPositions = "1,2,2.5",
                            RPMMax = 110,
                            RPMMin = 80
                        },
                        new
                        {
                            ID = 2,
                            Descrip = "Plano de Pie / Correr",
                            HandsPositions = "2,2.5",
                            RPMMax = 110,
                            RPMMin = 80
                        },
                        new
                        {
                            ID = 3,
                            Descrip = "Saltos",
                            HandsPositions = "2,2.5",
                            RPMMax = 110,
                            RPMMin = 80
                        },
                        new
                        {
                            ID = 4,
                            Descrip = "Escalada Sentado",
                            HandsPositions = "2,2.5",
                            RPMMax = 80,
                            RPMMin = 60
                        },
                        new
                        {
                            ID = 5,
                            Descrip = "Escalada de Pie",
                            HandsPositions = "3",
                            RPMMax = 80,
                            RPMMin = 60
                        },
                        new
                        {
                            ID = 6,
                            Descrip = "Correr en Montaña",
                            HandsPositions = "2,2.5",
                            RPMMax = 80,
                            RPMMin = 60
                        },
                        new
                        {
                            ID = 7,
                            Descrip = "Saltos en Montaña",
                            HandsPositions = "2,2.5,3",
                            RPMMax = 80,
                            RPMMin = 60
                        },
                        new
                        {
                            ID = 8,
                            Descrip = "Sprints en Plano",
                            HandsPositions = "2,2.5,3",
                            RPMMax = 110,
                            RPMMin = 80
                        },
                        new
                        {
                            ID = 9,
                            Descrip = "Sprints en Montaña",
                            HandsPositions = "2,2.5,3",
                            RPMMax = 110,
                            RPMMin = 80
                        });
                });

            modelBuilder.Entity("ENTITYS.ExerciseTemplateEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DescripMov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("HandsPosition")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<short>("IsRestingExercise")
                        .HasColumnType("smallint");

                    b.Property<int>("RPMFin")
                        .HasColumnType("int");

                    b.Property<int>("RPMMed")
                        .HasColumnType("int");

                    b.Property<int>("ResistancePercentage")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ExerciseTemplate");
                });

            modelBuilder.Entity("ENTITYS.SessionEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateI")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrip")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ENTITYS.SessionExercisesEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DescripMov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("HandsPosition")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("RPMFin")
                        .HasColumnType("int");

                    b.Property<int>("RPMMed")
                        .HasColumnType("int");

                    b.Property<int>("ResistancePercentage")
                        .HasColumnType("int");

                    b.Property<int>("SessionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SessionID");

                    b.ToTable("SessionExercises");
                });

            modelBuilder.Entity("ENTITYS.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateV")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrip")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("PIN")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.Property<short>("UserType")
                        .HasColumnType("smallint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateC = new DateTime(2025, 1, 8, 22, 45, 29, 423, DateTimeKind.Local).AddTicks(4067),
                            DateR = new DateTime(2025, 1, 8, 22, 45, 29, 426, DateTimeKind.Local).AddTicks(8064),
                            DateV = new DateTime(2025, 1, 8, 22, 45, 29, 426, DateTimeKind.Local).AddTicks(8839),
                            Descrip = "Super Usuario",
                            Email = "",
                            NumberPhone = "",
                            PIN = new byte[] { 75, 88, 75, 121, 43, 74, 77, 78, 66, 112, 72, 69, 43, 102, 114, 66, 105, 78, 75, 53, 117, 103, 61, 61 },
                            Password = new byte[] { 43, 57, 70, 65, 50, 73, 97, 114, 86, 119, 48, 75, 107, 66, 49, 113, 112, 89, 122, 67, 43, 81, 61, 61 },
                            UserType = (short)0,
                            Username = "SU"
                        });
                });

            modelBuilder.Entity("ENTITYS.SessionExercisesEntity", b =>
                {
                    b.HasOne("ENTITYS.SessionEntity", "Session")
                        .WithMany("SessionExercises")
                        .HasForeignKey("SessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("ENTITYS.SessionEntity", b =>
                {
                    b.Navigation("SessionExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
